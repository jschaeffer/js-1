<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>&lt;h2&gt;Canoe System-level Deployment job&lt;/h2&gt; &#xd;
&lt;br&gt;&#xd;
&lt;h3&gt;Deployment of multiple Canoe products to target system (devint, scrumx, cloudbased)&lt;/h3&gt;&#xd;
&lt;hr&gt;&#xd;
&lt;h4&gt;User can select application and database components to be delivered to target systems.  Version deployed will be derived from the current DevInt version and DBs rebuilt by default.&lt;/h4&gt;&#xd;
&#xd;
Parameter Driven.  User supplies needed parameters to initiate the deploy job</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.TextParameterDefinition>
          <name>DeployUser</name>
          <description>&lt;h2&gt;Enter the User id and summary of purpose for deployment&lt;/h2&gt;</description>
          <defaultValue></defaultValue>
        </hudson.model.TextParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>DeployTarg</name>
          <description>&lt;h2&gt;Select Target Deployment Environment&lt;/h2&gt;</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>Marley</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <com.cwctravel.hudson.plugins.extended__choice__parameter.ExtendedChoiceParameterDefinition plugin="extended-choice-parameter@0.34">
          <name>Components</name>
          <description>&lt;h2&gt;Select Components to install.&lt;/h2&gt;</description>
          <quoteValue>false</quoteValue>
          <visibleItemCount>30</visibleItemCount>
          <type>PT_CHECKBOX</type>
          <value>ads-core, caas-core, oss_bar, ops-dt-domain, dai-billing, smsi-publisher, Dynamic-Ad-Insertion-cm, Dynamic-Ad-Insertion-engine, dai-cip-feedback, dai-cip, dai-lincoln, dai-smsi, int-test-support, ops-dce-scte-cfa-reporting-agent, ops-dce-safi-reporting-agent, ops-dt, ops-dt-domain, ops-dce-metadata-agent, Pgmr-Cpgn-Int, smsi-admin, dai_amm, caas-admin, dai-etl-feeder</value>
          <multiSelectDelimiter>,</multiSelectDelimiter>
        </com.cwctravel.hudson.plugins.extended__choice__parameter.ExtendedChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>DB_Rebuild</name>
          <description>&lt;h2&gt;If there is a DB associated with these components, do you want to rebuild &lt;b&gt;ALL&lt;/b&gt; schemas from scratch or perform just a liquibase update against &lt;b&gt;ALL&lt;/b&gt; existing schemas?&lt;/h2&gt;</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>No</string>
              <string>Yes</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>JDK1.6.0</jdk>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/ksh

echo &quot;&lt;b&gt;--- Deployment ID:&lt;/b&gt; ${BUILD_TAG} - ${BUILD_ID}&lt;br&gt;&quot; &gt;&gt; /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log
echo &quot;&lt;b&gt;System Delivery to ${DeployTarg} by ${DeployUser} &lt;/b&gt;&lt;br&gt;&quot; &gt;&gt; /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log
export SelComp=`echo &quot;$Components&quot; | sed &apos;s?,? ?g`

for Component in $SelComp
 do
# Set getVer to 0 to default to devint version
#
export getVer=&quot;0&quot;
export Component
export BUILD_TAG
export DeployTarg
export DeployUser

cd /opt/build/scripts
./Single_Component_Deploy.sh $Component $DB_Rebuild $DeployTarg $BUILD_TAG $DeployUser

done

echo &quot;&lt;b&gt;DB Rebuild: &lt;/b&gt;${DB_Rebuild} &lt;br&gt;&quot; &gt;&gt; /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log
echo &quot;&lt;b&gt;URL For Deploy output: &lt;/b&gt;&lt;a href=&quot;${BUILD_URL}console&quot;&gt;console&lt;/a&gt;&lt;br&gt;&quot; &gt;&gt; /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log
echo &quot;&lt;hr&gt;&quot; &gt;&gt; /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log
echo &quot;&lt;p&gt;&quot; &gt;&gt; /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log
mv /opt/build/scm/scripts/buildServer/log/${DeployTarg}.html /opt/build/scm/scripts/buildServer/log/${DeployTarg}.tmp
cat /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log /opt/build/scm/scripts/buildServer/log/${DeployTarg}.tmp &gt; /opt/build/scm/scripts/buildServer/log/${DeployTarg}.html
rm /opt/build/scm/scripts/buildServer/log/${DeployTarg}.tmp
rm /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>