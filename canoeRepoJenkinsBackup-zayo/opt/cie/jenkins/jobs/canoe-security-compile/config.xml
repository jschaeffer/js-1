<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Compile job for the canoe-security plug-in. </description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>git@github.com:CanoeVentures/canoe-security.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>JDK1.6.0</jdk>
  <triggers>
    <com.cloudbees.jenkins.GitHubPushTrigger plugin="github@1.8">
      <spec></spec>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <com.g2one.hudson.grails.GrailsBuilder plugin="grails@1.7">
      <targets>clean package-plugin doc</targets>
      <name>(Default)</name>
      <grailsWorkDir>/opt/cvbuild/.canoe-security-compile_work_dir</grailsWorkDir>
      <projectWorkDir>/opt/cvbuild/.canoe-security-compile_project_dir</projectWorkDir>
      <projectBaseDir></projectBaseDir>
      <serverPort>9092</serverPort>
      <properties>grails.project.plugins.dir=/opt/cvbuild/.grails/1.3.7/projects/canoe-security-compile</properties>
      <forceUpgrade>false</forceUpgrade>
      <nonInteractive>true</nonInteractive>
      <useWrapper>false</useWrapper>
      <plainOutput>true</plainOutput>
      <stackTrace>false</stackTrace>
      <verbose>false</verbose>
      <refreshDependencies>false</refreshDependencies>
    </com.g2one.hudson.grails.GrailsBuilder>
    <hudson.plugins.gradle.Gradle plugin="gradle@1.21">
      <description></description>
      <switches></switches>
      <tasks>writePom</tasks>
      <rootBuildScriptDir></rootBuildScriptDir>
      <buildFile></buildFile>
      <gradleName>(Default)</gradleName>
      <useWrapper>false</useWrapper>
      <makeExecutable>false</makeExecutable>
      <fromRootBuildScriptDir>false</fromRootBuildScriptDir>
    </hudson.plugins.gradle.Gradle>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
/opt/build/scripts/createGradleScript.sh ${WORKSPACE}
STATUS=${?}
if [[ ${STATUS} != &quot;0&quot; ]]; then
    exit ${STATUS}
fi</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.JavadocArchiver plugin="javadoc@1.1">
      <javadocDir>target/docs/gapi</javadocDir>
      <keepAll>false</keepAll>
    </hudson.tasks.JavadocArchiver>
    <com.progress.hudson.ScheduleFailedBuildsPublisher plugin="schedule-failed-builds@1.1">
      <interval>5</interval>
      <maxRetries>3</maxRetries>
    </com.progress.hudson.ScheduleFailedBuildsPublisher>
  </publishers>
  <buildWrappers>
    <org.jfrog.hudson.gradle.ArtifactoryGradleConfigurator plugin="artifactory@2.2.3">
      <deployMaven>true</deployMaven>
      <deployIvy>true</deployIvy>
      <deployBuildInfo>true</deployBuildInfo>
      <includeEnvVars>false</includeEnvVars>
      <runChecks>false</runChecks>
      <violationRecipients></violationRecipients>
      <includePublishArtifacts>false</includePublishArtifacts>
      <scopes></scopes>
      <licenseAutoDiscovery>true</licenseAutoDiscovery>
      <disableLicenseAutoDiscovery>false</disableLicenseAutoDiscovery>
      <ivyPattern>[organisation]/[module]/ivy-[revision].xml</ivyPattern>
      <enableIssueTrackerIntegration>false</enableIssueTrackerIntegration>
      <aggregateBuildIssues>false</aggregateBuildIssues>
      <artifactPattern>[organisation]/[module]/[revision]/[artifact]-[revision](-[classifier]).[ext]</artifactPattern>
      <notM2Compatible>false</notM2Compatible>
      <artifactDeploymentPatterns>
        <includePatterns></includePatterns>
        <excludePatterns></excludePatterns>
      </artifactDeploymentPatterns>
      <discardOldBuilds>false</discardOldBuilds>
      <passIdentifiedDownstream>false</passIdentifiedDownstream>
      <discardBuildArtifacts>false</discardBuildArtifacts>
      <matrixParams></matrixParams>
      <skipInjectInitScript>false</skipInjectInitScript>
      <allowPromotionOfNonStagedBuilds>false</allowPromotionOfNonStagedBuilds>
      <blackDuckRunChecks>false</blackDuckRunChecks>
      <blackDuckAppName></blackDuckAppName>
      <blackDuckAppVersion></blackDuckAppVersion>
      <filterExcludedArtifactsFromBuild>false</filterExcludedArtifactsFromBuild>
      <details>
        <artifactoryName>https://canoe-ventures.artifactoryonline.com/canoe_ventures</artifactoryName>
        <repositoryKey>plugins-releases-local</repositoryKey>
        <snapshotsRepositoryKey>plugins-releases-local</snapshotsRepositoryKey>
        <downloadReleaseRepositoryKey>repo</downloadReleaseRepositoryKey>
        <artifactoryUrl>https://canoe-ventures.artifactoryonline.com/canoe_ventures</artifactoryUrl>
        <stagingPlugin>
          <pluginName>None</pluginName>
        </stagingPlugin>
      </details>
      <deployArtifacts>true</deployArtifacts>
      <envVarsPatterns>
        <includePatterns></includePatterns>
        <excludePatterns>*password*,*secret*</excludePatterns>
      </envVarsPatterns>
      <aggregationBuildStatus>Released</aggregationBuildStatus>
      <blackDuckReportRecipients></blackDuckReportRecipients>
      <blackDuckScopes></blackDuckScopes>
      <blackDuckIncludePublishedArtifacts>false</blackDuckIncludePublishedArtifacts>
      <autoCreateMissingComponentRequests>false</autoCreateMissingComponentRequests>
      <autoDiscardStaleComponentRequests>false</autoDiscardStaleComponentRequests>
    </org.jfrog.hudson.gradle.ArtifactoryGradleConfigurator>
  </buildWrappers>
</project>