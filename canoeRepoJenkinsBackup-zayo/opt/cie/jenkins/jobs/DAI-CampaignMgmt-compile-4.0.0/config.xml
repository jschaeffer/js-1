<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>4</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/*</refspec>
        <url>git@github.com:CanoeVentures/Dynamic-Ad-Insertion-cm.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/br_4.0.0</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>JDK1.6.0</jdk>
  <triggers>
    <com.cloudbees.jenkins.GitHubPushTrigger plugin="github@1.8">
      <spec></spec>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

/opt/build/scripts/cleanIvyCache.sh com.canoeventures.dai.caas core-model

/opt/build/scripts/cleanIvyCache.sh com.canoeventures.dai.caas core-services</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

echo &quot;DAI_CM_HOME = ${DAI_CM_HOME}&quot;
ls -alR $DAI_CM_HOME
echo &quot;Replacing contents from DAI_CM_HOME with ./config config files&quot;
rm -fr /opt/cvbuild/config/dai_cm/*.properties

cd ${WORKSPACE}/config
for base in *devint.properties*; do new=`echo $base | sed &apos;s/devint.//g&apos;`; echo &quot;Renaming $base to $new and copying to ${DAI_CM_HOME}&quot;; cp $base $DAI_CM_HOME/$new; ls -al $DAI_CM_HOME/$new; done

ls -alR $DAI_CM_HOME

echo &quot;Showing config file content&quot;
cd ${DAI_CM_HOME}
cat *.properties</command>
    </hudson.tasks.Shell>
    <com.g2one.hudson.grails.GrailsBuilder plugin="grails@1.7">
      <targets>clean &quot;test-app unit: -coverage&quot;  </targets>
      <name>Grails 2.0.4</name>
      <grailsWorkDir>/opt/cvbuild/.DAI-Campaign-mgmt_work4.0_dir</grailsWorkDir>
      <projectWorkDir>/opt/cvbuild/.DAI-Campaign-mgmt_project4.0_dir</projectWorkDir>
      <projectBaseDir></projectBaseDir>
      <serverPort>9191</serverPort>
      <properties>geb.env=phantomjs
grails.project.plugins.dir=/opt/cvbuild/.grails/2.0.4/projects/DAI-CampaignMgmt-compile4.0</properties>
      <forceUpgrade>false</forceUpgrade>
      <nonInteractive>true</nonInteractive>
      <useWrapper>false</useWrapper>
      <plainOutput>true</plainOutput>
      <stackTrace>false</stackTrace>
      <verbose>false</verbose>
      <refreshDependencies>false</refreshDependencies>
    </com.g2one.hudson.grails.GrailsBuilder>
    <hudson.tasks.Shell>
      <command>export testout=&quot;${WORKSPACE}/target/test-reporting&quot;
echo &quot;Temporarily archiving the html reports for unit tests&quot;
cd ${testout}
tar -cvf ${WORKSPACE}/htmlrpts.tar html
tar -cvf ${WORKSPACE}/covrrpts.tar cobertura</command>
    </hudson.tasks.Shell>
    <com.g2one.hudson.grails.GrailsBuilder plugin="grails@1.7">
      <targets>&quot;test-app :cucumber @5minTest -echoOut -echoErr&quot;</targets>
      <name>Grails 2.0.4</name>
      <grailsWorkDir>/opt/cvbuild/.DAI-Campaign-mgmt_work4.0_dir</grailsWorkDir>
      <projectWorkDir>/opt/cvbuild/.DAI-Campaign-mgmt_project4.0_dir</projectWorkDir>
      <projectBaseDir></projectBaseDir>
      <serverPort>9191</serverPort>
      <properties>geb.env=phantomjs
grails.project.plugins.dir=/opt/cvbuild/.grails/2.0.4/projects/DAI-CampaignMgmt-compile4.0</properties>
      <forceUpgrade>false</forceUpgrade>
      <nonInteractive>true</nonInteractive>
      <useWrapper>false</useWrapper>
      <plainOutput>true</plainOutput>
      <stackTrace>false</stackTrace>
      <verbose>false</verbose>
      <refreshDependencies>false</refreshDependencies>
    </com.g2one.hudson.grails.GrailsBuilder>
    <hudson.tasks.Shell>
      <command>export testout=&quot;${WORKSPACE}/target/test-reporting&quot;
echo &quot;Restoring the html reports from unit tests&quot;
cd ${testout}
tar -xvf ${WORKSPACE}/htmlrpts.tar
tar -xvf ${WORKSPACE}/covrrpts.tar</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <htmlpublisher.HtmlPublisher plugin="htmlpublisher@1.3">
      <reportTargets>
        <htmlpublisher.HtmlPublisherTarget>
          <reportName>Coverage HTML Report</reportName>
          <reportDir>target/test-reporting/cobertura/index.html</reportDir>
          <reportFiles>index.html</reportFiles>
          <keepAll>true</keepAll>
          <allowMissing>false</allowMissing>
          <wrapperName>htmlpublisher-wrapper.html</wrapperName>
        </htmlpublisher.HtmlPublisherTarget>
      </reportTargets>
    </htmlpublisher.HtmlPublisher>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>**/target/test-reports/*.xml&apos;</testResults>
      <keepLongStdio>false</keepLongStdio>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
    <net.masterthought.jenkins.CucumberReportPublisher plugin="cucumber-reports@0.0.23">
      <jsonReportDirectory>notes</jsonReportDirectory>
      <pluginUrlPath></pluginUrlPath>
      <skippedFails>false</skippedFails>
      <undefinedFails>false</undefinedFails>
      <noFlashCharts>false</noFlashCharts>
      <ignoreFailedTests>false</ignoreFailedTests>
    </net.masterthought.jenkins.CucumberReportPublisher>
    <hudson.plugins.jira.JiraIssueUpdater plugin="jira@1.37"/>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.38.1">
      <recipientList>jeff.schaeffer@canoeventures.net,michael.munhall@canoeventures.net, scott.davis@canoeventures.com</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.FailureTrigger>
          <email>
            <recipientList></recipientList>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.DevelopersRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo></replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.FailureTrigger>
      </configuredTriggers>
      <contentType>default</contentType>
      <defaultSubject>$DEFAULT_SUBJECT</defaultSubject>
      <defaultContent>$DEFAULT_CONTENT</defaultContent>
      <attachmentsPattern></attachmentsPattern>
      <presendScript></presendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo></replyTo>
      <saveOutput>false</saveOutput>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.xvnc.Xvnc plugin="xvnc@1.11">
      <takeScreenshot>false</takeScreenshot>
    </hudson.plugins.xvnc.Xvnc>
  </buildWrappers>
</project>