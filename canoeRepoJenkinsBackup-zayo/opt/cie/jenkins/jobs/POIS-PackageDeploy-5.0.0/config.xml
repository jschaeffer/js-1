<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.13.3">
      <projectUrl>https://github.com/CanoeVentures/POIS/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <jenkins.plugins.slack.SlackNotifier_-SlackJobProperty plugin="slack@1.8.1">
      <teamDomain></teamDomain>
      <token></token>
      <room></room>
      <startNotification>false</startNotification>
      <notifySuccess>true</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>true</notifyUnstable>
      <notifyFailure>true</notifyFailure>
      <notifyBackToNormal>true</notifyBackToNormal>
      <notifyRepeatedFailure>false</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <showCommitList>false</showCommitList>
      <includeCustomMessage>false</includeCustomMessage>
      <customMessage></customMessage>
    </jenkins.plugins.slack.SlackNotifier_-SlackJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.5.3">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>git@github.com:CanoeVentures/POIS.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/br_5.0.0</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <browser class="hudson.plugins.git.browser.GitWeb">
      <url>https://github.com/CanoeVenturesPOIS/</url>
    </browser>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>JDK1.8.0_u25</jdk>
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec>21 2 * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -x
echo &quot;Setting Scala home to scala 2.11.2&quot;
cd /opt/tools
rm scala
ln -s scala-2.11.2 scala</command>
    </hudson.tasks.Shell>
    <org.jfrog.hudson.maven3.Maven3Builder plugin="artifactory@2.5.1">
      <mavenName>Maven3.2</mavenName>
      <rootPom>pom.xml</rootPom>
      <goals>clean install -DskipTests</goals>
      <mavenOpts></mavenOpts>
    </org.jfrog.hudson.maven3.Maven3Builder>
    <hudson.plugins.groovy.Groovy plugin="groovy@1.27">
      <scriptSource class="hudson.plugins.groovy.StringScriptSource">
        <command>def VERSION = &quot;5.0.0&quot;
def PROJECT = &quot;POIS&quot;
def PROJFILE = &quot;/opt/build/scm/scripts/buildServer/properties/projects/$PROJECT/project.properties&quot;
String changelogtemp = &quot;&quot;&quot;

projectRoot=&quot;/opt/cie/jenkins/jobs/POIS-PackageDeploy-5.0.0/workspace&quot;
commonTargetRoot=&quot;target&quot;
webappDir=&quot;webapps&quot;

build {
    build_args=&quot;mvn clean install -DskipTests&quot;
}


build_package {
    pre_pkg_cmds {
            pre_pkg_1=&quot;mv \$projectRoot/web-app/target/pois*.war \$projectRoot/web-app/target/pois.war&quot;
            pre_pkg_2=&quot;cd \$projectRoot/web-app/target; chmod +x package.bash; ./package.bash&quot;
    }
    artifacts {
        name {
            bin=&quot;pois.war&quot;
            README=&quot;README.md&quot;
            config=&quot;config&quot;
        }
        location {
            bin=&quot;\$projectRoot/web-app/target&quot;
            README=&quot;\$projectRoot&quot;
            config=&quot;\$projectRoot&quot;
        }
    }
}

&quot;&quot;&quot;
File scriptName = new File(&quot;$PROJFILE&quot;)
        scriptName.write(&quot;${changelogtemp}&quot;)
        println scriptName</command>
      </scriptSource>
      <groovyName>(Default)</groovyName>
      <parameters></parameters>
      <scriptParameters></scriptParameters>
      <properties></properties>
      <javaOpts></javaOpts>
      <classPath></classPath>
    </hudson.plugins.groovy.Groovy>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

export VERSION=&quot;5.0.0&quot;
export PROJECT=&quot;POIS&quot;

export ProjFile=&quot;/opt/build/scm/scripts/buildServer/properties/projects/$PROJECT/project.properties&quot;

cat $ProjFile

/opt/build/scripts/CreateJenkinsPackage.sh $PROJECT $PROJECT br_$VERSION ${BUILD_NUMBER}

echo &quot;Resetting Scala home to scala 2.9.2&quot;
cd /opt/tools
rm scala
ln -s scala-2.9.2 scala

</command>
    </hudson.tasks.Shell>
    <hudson.plugins.parameterizedtrigger.TriggerBuilder plugin="parameterized-trigger@2.29">
      <configs>
        <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>SelEnv=devint</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>ScrumResurrectState</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <block>
            <buildStepFailureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </buildStepFailureThreshold>
            <unstableThreshold>
              <name>UNSTABLE</name>
              <ordinal>1</ordinal>
              <color>YELLOW</color>
              <completeBuild>true</completeBuild>
            </unstableThreshold>
            <failureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </failureThreshold>
          </block>
          <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
        </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.TriggerBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/ksh

echo &quot;&lt;b&gt;--- Deployment ID:&lt;/b&gt; ${BUILD_TAG} - ${BUILD_ID}&lt;br&gt;&quot; &gt;&gt; /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log
echo &quot;&lt;b&gt;Deployment to devint by Jenkins &lt;/b&gt;&lt;br&gt;&quot; &gt;&gt; /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log
echo &quot;&lt;b&gt;Component: &lt;/b&gt;POIS &lt;br&gt;&quot; &gt;&gt; /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log


export VERSION=&quot;5.0.0_${BUILD_NUMBER}&quot;
export Component=&quot;POIS&quot;; echo &quot;Component - $Component&quot;
export DB_Rebuild=&quot;Yes&quot;; echo &quot;DB_Rebuild - $DB_Rebuild&quot;
export Version=${VERSION}; echo &quot;Version - $Version&quot;
export Clear_Logs=&quot;Yes&quot;; echo &quot;Clear_Logs - $Clear_Logs&quot;
export DeployTarg=&quot;devint&quot;; echo &quot;DeployTarg - $DeployTarg&quot;
export DeployUser=&quot;Jenkins&quot;; echo &quot;DeployUser = $DeployUser&quot;
export BUILD_TAG


print Deploying version ${VERSION}
print
print

ssh cvbuild.cv.dr &quot;bash -c \&quot;source ~/.bash_profile &amp;&amp; cd /opt/build/scripts &amp;&amp; ./Single_Component_Deploy.sh $Component $DB_Rebuild $Clear_Logs $DeployTarg $BUILD_TAG $DeployUser $JOB_NAME $BUILD_NUMBER $Version\&quot; &quot;</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

echo &quot;5.0.0_${BUILD_NUMBER}&quot; &gt; /var/www/html/rh65/POIS.txt</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.jira.JiraIssueUpdater plugin="jira@2.2.1">
      <labels/>
    </hudson.plugins.jira.JiraIssueUpdater>
    <hudson.plugins.git.GitPublisher plugin="git@2.5.3">
      <configVersion>2</configVersion>
      <pushMerge>false</pushMerge>
      <pushOnlyIfSuccess>false</pushOnlyIfSuccess>
      <forcePush>false</forcePush>
      <tagsToPush>
        <hudson.plugins.git.GitPublisher_-TagToPush>
          <targetRepoName>origin</targetRepoName>
          <tagName>v_5.0.0_${BUILD_NUMBER}</tagName>
          <tagMessage></tagMessage>
          <createTag>true</createTag>
          <updateTag>false</updateTag>
        </hudson.plugins.git.GitPublisher_-TagToPush>
      </tagsToPush>
    </hudson.plugins.git.GitPublisher>
    <jenkins.plugins.slack.SlackNotifier plugin="slack@1.8.1">
      <teamDomain>canoeventures</teamDomain>
      <authToken>ulqvAk36Srn0kGF9JMh4UJn5</authToken>
      <buildServerUrl>http://cvbuild.cv.infra:7001/</buildServerUrl>
      <room>#scm</room>
    </jenkins.plugins.slack.SlackNotifier>
  </publishers>
  <buildWrappers/>
</project>