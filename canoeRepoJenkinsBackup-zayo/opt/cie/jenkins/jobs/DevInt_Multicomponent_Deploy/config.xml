<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>&lt;h2&gt;Canoe System-level Deployment job&lt;/h2&gt; &#xd;
&lt;br&gt;&#xd;
&lt;h3&gt;Deployment of multiple Canoe products to target system (devint, scrumx, cloudbased)&lt;/h3&gt;&#xd;
&lt;hr&gt;&#xd;
&lt;h4&gt;User can select application and database components to be delivered to target systems.  Version deployed will be derived from the current DevInt version and DBs rebuilt by default.&lt;/h4&gt;&#xd;
&#xd;
Parameter Driven.  User supplies needed parameters to initiate the deploy job</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.TextParameterDefinition>
          <name>DeployUser</name>
          <description>&lt;h2&gt;Enter the User id and summary of purpose for deployment&lt;/h2&gt;</description>
          <defaultValue></defaultValue>
        </hudson.model.TextParameterDefinition>
        <com.cwctravel.hudson.plugins.extended__choice__parameter.ExtendedChoiceParameterDefinition plugin="extended-choice-parameter@0.50">
          <name>Components</name>
          <description>&lt;h2&gt;Select Components to install.&lt;/h2&gt;</description>
          <quoteValue>false</quoteValue>
          <saveJSONParameterToFile>false</saveJSONParameterToFile>
          <visibleItemCount>30</visibleItemCount>
          <type>PT_CHECKBOX</type>
          <value>ads-core, Dynamic-Ad-Insertion-engine, dai-national-cis, ad-load-manager, dai-cip-feedback, caas-core, metadata-publisher, dai-cip, dai-etl-feeder, dai-smsi, int-test-support, dmp-config, smsi-publisher, smsiCorrection, dai-smsi-relay, smsi-msp-relay, dai_amm_publisher, dai-metadata-ingestion, dai-dce, Dynamic-Ad-Insertion-cm, acp, POIS, dai-lincoln, ops-dce-metadata-agent, Pgmr-Cpgn-Int, MicroDev, impression_collector, request-mgr, SDC-session-collector, smsi-msp-relay</value>
          <multiSelectDelimiter>,</multiSelectDelimiter>
        </com.cwctravel.hudson.plugins.extended__choice__parameter.ExtendedChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>DB_Rebuild</name>
          <description>&lt;h2&gt;If there is a DB associated with these components, do you want to rebuild &lt;b&gt;ALL&lt;/b&gt; schemas from scratch or perform just a liquibase update against &lt;b&gt;ALL&lt;/b&gt; existing schemas?&lt;/h2&gt;</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>No</string>
              <string>Yes</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <jenkins.plugins.slack.SlackNotifier_-SlackJobProperty plugin="slack@1.8.1">
      <teamDomain></teamDomain>
      <token></token>
      <room></room>
      <startNotification>false</startNotification>
      <notifySuccess>false</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>false</notifyUnstable>
      <notifyFailure>false</notifyFailure>
      <notifyBackToNormal>false</notifyBackToNormal>
      <notifyRepeatedFailure>false</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <showCommitList>false</showCommitList>
      <includeCustomMessage>false</includeCustomMessage>
      <customMessage></customMessage>
    </jenkins.plugins.slack.SlackNotifier_-SlackJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>cvbuild.cv.dr</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>JDK1.8.0_u25</jdk>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.parameterizedtrigger.TriggerBuilder plugin="parameterized-trigger@2.29">
      <configs>
        <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>selEnv=devint</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>DevintResurrectState</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <block>
            <buildStepFailureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </buildStepFailureThreshold>
            <unstableThreshold>
              <name>UNSTABLE</name>
              <ordinal>1</ordinal>
              <color>YELLOW</color>
              <completeBuild>true</completeBuild>
            </unstableThreshold>
            <failureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </failureThreshold>
          </block>
          <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
        </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.TriggerBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -x

echo &quot;&lt;b&gt;--- Deployment ID:&lt;/b&gt; ${BUILD_TAG} - ${BUILD_ID}&lt;br&gt;&quot; &gt;&gt; /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log
echo &quot;&lt;b&gt;System Delivery to ${DeployTarg} by ${DeployUser} &lt;/b&gt;&lt;br&gt;&quot; &gt;&gt; /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log
export SelComp=$(echo &quot;$Components&quot; | sed  &apos;s/,/ /g&apos; )



for Component in $SelComp
 do
# Set getVer to 0 to default to devint version
#
 export getVer=&quot;0&quot;
 export BUILD_TAG
 export DeployUser
 export Component
 export Clear_Logs=&quot;No&quot;
 export Version
 export VERSION=${Version}
 export DeployTarg=&quot;devint&quot;

 cd /opt/build/scripts
# ./Single_Component_Deploy.sh $Component $DB_Rebuild $Clear_Logs $DeployTarg $BUILD_TAG $DeployUser
 ./Single_Component_Deploy.sh ${Component} ${DB_Rebuild} ${Clear_Logs} ${DeployTarg} ${BUILD_TAG} ${DeployUser} $JOB_NAME $BUILD_NUMBER ${Version} 
done

</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>