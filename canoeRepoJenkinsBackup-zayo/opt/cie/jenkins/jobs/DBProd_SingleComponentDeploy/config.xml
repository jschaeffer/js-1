<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>&lt;h1&gt;Title:  &lt;b&gt;Production Single Component, Deployment job&lt;/b&gt;&lt;/h1&gt; &#xd;
&#xd;
&lt;h2&gt;&lt;u&gt;Description:&lt;/u&gt; &lt;b&gt;This job will deploy one DB component to the Production Environment.  User specifies :&#xd;
  &lt;ul&gt;&#xd;
     &lt;li&gt;The component to deploy&#xd;
     &lt;li&gt;The version of the component&#xd;
  &lt;/ul&gt;&#xd;
       &lt;/h2&gt; &lt;br&gt;&lt;/b&gt;</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.TextParameterDefinition>
          <name>DeployUserPassword</name>
          <description>Enter authorized password</description>
          <defaultValue></defaultValue>
        </hudson.model.TextParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>Component</name>
          <description>Select Component to Deploy</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>ad-load-manager</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>Version</name>
          <description>Enter Version to Deploy.  Must be entered as &lt;b&gt;version number + build number&lt;/b&gt; ie; &lt;u&gt;4.0.0_35&lt;/u&gt;)</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>StealthDeploy</name>
          <description>StealthDeploy means to deliver a .war file in the exact same manner as a regular deployment but don&apos;t clean the webapps,
work or shutdown the tcserver instance.  This allows for predeployments to happen where only restart is needed to complete.</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>No</string>
              <string>Yes</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <jenkins.plugins.slack.SlackNotifier_-SlackJobProperty plugin="slack@1.8.1">
      <teamDomain></teamDomain>
      <token></token>
      <room></room>
      <startNotification>false</startNotification>
      <notifySuccess>false</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>false</notifyUnstable>
      <notifyFailure>false</notifyFailure>
      <notifyBackToNormal>false</notifyBackToNormal>
      <notifyRepeatedFailure>false</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <showCommitList>false</showCommitList>
      <includeCustomMessage>false</includeCustomMessage>
      <customMessage></customMessage>
    </jenkins.plugins.slack.SlackNotifier_-SlackJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>JDK1.6.0</jdk>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/ksh

if  [[ $BUILD_USER_ID = &quot;jschaeffer&quot; || $BUILD_USER_ID = &quot;clecrone&quot; || $BUILD_USER_ID = &quot;lhassell&quot; ]]; then
    echo &quot;Authorized Deployer - Proceeding with deployment&quot;
else
    echo &quot;Unauthorized User!&quot;
    echo &quot;Exiting!&quot;
    exit 1
fi
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/ksh

export BUILD_TAG
export BUILD_USER_ID
export Component
export Version
export DeployTarg=&quot;production&quot;
export StealthDeploy
echo &quot;&lt;b&gt;Deployment ID:&lt;/b&gt; ${BUILD_TAG} - ${BUILD_ID}&lt;br&gt;&quot; &gt;&gt; /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log
echo &quot;&lt;b&gt;Deployment to ${DeployTarg} by ${BUILD_USER} &lt;/b&gt;&lt;br&gt;&quot; &gt;&gt; /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log
echo &quot;&lt;b&gt;StealthDeploy? : $StealthDeploy  &lt;/b&gt;&lt;br&gt;&quot; &gt;&gt; /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log

export CompSet=&quot;$(echo $Component | cut -f2 -d:)&quot;
export Component=&quot;$(echo $Component | cut -f1 -d:)&quot;

cd /opt/build/scripts/production
./tmp_Prod_Single_Deploy.sh $Component $DB_Rebuild $Version $Clear_Logs $DeployTarg $BUILD_TAG  $BUILD_USER_ID $StealthDeploy $CompSet

if grep -q &quot;ERROR:&quot; /opt/cie/jenkins/jobs/${JOB_NAME}/builds/${BUILD_NUMBER}/log ; then
   echo &quot;Deployment Failed.&quot;
   echo &quot;&lt;font bgcolor=black color=red&gt;&lt;b&gt;&amp;nbsp DB Delibery Failed !!&lt;/b&gt;&lt;/font&gt;&lt;br&gt;&quot; &gt;&gt; /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log
   echo &quot;&lt;b&gt;&amp;nbsp URL For Deploy output: &lt;/b&gt;&lt;a href=&quot;${BUILD_URL}console&quot;&gt;console&lt;/a&gt;&lt;br&gt;&quot; &gt;&gt; /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log
   echo &quot;&lt;hr&gt;&quot; &gt;&gt; /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log
   echo &quot;&lt;p&gt;&quot; &gt;&gt; /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log
   mv /opt/build/scm/scripts/buildServer/log/${DeployTarg}.html /opt/build/scm/scripts/buildServer/log/${DeployTarg}.tmp
   cat /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log /opt/build/scm/scripts/buildServer/log/${DeployTarg}.tmp &gt; /opt/build/scm/scripts/buildServer/log/${DeployTarg}.html
   rm /opt/build/scm/scripts/buildServer/log/${DeployTarg}.tmp
   rm /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log
   exit 1
  else
   echo &quot;&lt;b&gt;URL For Deploy output: &lt;/b&gt;&lt;a href=&quot;${BUILD_URL}console&quot;&gt;console&lt;/a&gt;&lt;br&gt;&quot; &gt;&gt; /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log
   echo &quot;&lt;hr&gt;&quot; &gt;&gt; /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log
   echo &quot;&lt;p&gt;&quot; &gt;&gt; /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log
   mv /opt/build/scm/scripts/buildServer/log/${DeployTarg}.html /opt/build/scm/scripts/buildServer/log/${DeployTarg}.tmp
   cat /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log /opt/build/scm/scripts/buildServer/log/${DeployTarg}.tmp &gt; /opt/build/scm/scripts/buildServer/log/${DeployTarg}.html
   rm /opt/build/scm/scripts/buildServer/log/${DeployTarg}.tmp
   rm /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log
fi

</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jenkinsci.plugins.builduser.BuildUser plugin="build-user-vars-plugin@1.4"/>
  </buildWrappers>
</project>