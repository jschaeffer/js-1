<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>&lt;h1&gt;Title:  &lt;b&gt;Scrum 1 Multiple Component, Deployment job&lt;/b&gt;&lt;/h1&gt; &#xd;
&#xd;
&lt;h2&gt;&lt;u&gt;Description:&lt;/u&gt; &lt;b&gt;This job will restart tcserver instances selected on Scrum 1.  User specifies :&#xd;
  &lt;ul&gt;&#xd;
     &lt;li&gt;The components instance to restart&#xd;
  &lt;/ul&gt;&#xd;
&lt;/h2&gt; &lt;br&gt;&lt;/b&gt;</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.TextParameterDefinition>
          <name>DeployUser</name>
          <description>&lt;h2&gt;Enter the User id and summary of purpose for deployment&lt;/h2&gt;</description>
          <defaultValue></defaultValue>
        </hudson.model.TextParameterDefinition>
        <com.cwctravel.hudson.plugins.extended__choice__parameter.ExtendedChoiceParameterDefinition plugin="extended-choice-parameter@0.30">
          <name>Instances</name>
          <description>&lt;h2&gt;Select tcServer Instances to restart.&lt;/h2&gt;</description>
          <quoteValue>false</quoteValue>
          <visibleItemCount>30</visibleItemCount>
          <type>PT_CHECKBOX</type>
          <value>oss_bar, ops-dt-domain, dai-billing, smsi-publisher, dai-smsi-relay, Dynamic-Ad-Insertion-cm, Dynamic-Ad-Insertion-engine, dai-cip-feedback, acp, dai-smsi, ops-dce-scte-cfa-reporting-agent, ops-dce-safi-reporting-agent, ops-dt, ops-dce-metadata-agent, Pgmr-Cpgn-Int, smsi-admin, dai_amm, dai_amm_publisher, caas-admin</value>
          <propertyFile></propertyFile>
          <propertyKey></propertyKey>
          <defaultValue></defaultValue>
          <defaultPropertyFile></defaultPropertyFile>
          <defaultPropertyKey></defaultPropertyKey>
          <multiSelectDelimiter>,</multiSelectDelimiter>
        </com.cwctravel.hudson.plugins.extended__choice__parameter.ExtendedChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>(Default)</jdk>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

export DeployTarg=&quot;scrum2&quot;
echo &quot;&lt;b&gt;--- Restart ID:&lt;/b&gt; ${BUILD_TAG} - ${BUILD_ID}&lt;br&gt;&quot; &gt;&gt; /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log
echo &quot;&lt;b&gt;tcServer Restart on ${DeployTarg} by ${DeployUser} &lt;/b&gt;&lt;br&gt;&quot; &gt;&gt; /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log
export SelInst=`echo &quot;$Instances&quot; | sed &apos;s?,? ?g&apos;`

##############
# Execute a command. Do not fail on exit.
##############
executeCommandNoFail() {

    if [ ${VERBOSE} = 1 ] ; then
        echo &quot;Executing : $1&quot;
    fi

    RESULT=`eval &quot;$1&quot;`

    if [ ${VERBOSE} = 1 ] ; then
        echo &quot;Result : $RESULT&quot;
    fi
}

for Instance in $SelInst; do
export Instance
export RestartTarg=&quot;dvappdai03&quot;
export DeployUser
export restComp=&quot;n&quot;
export VERBOSE=&quot;1&quot;
echo &quot;Instance -&gt; $Instance   RestartTarg -&gt; $RestartTarg   DeployTarg -&gt; $DeployTarg&quot;

case $Instance in
   oss_bar)
     ;;
   dai-billing)
     export Instance=&quot;billing&quot;
     ;;
   smsi-publisher)
     export Instance=&quot;smsipub&quot;
     ;;
   Dynamic-Ad-Insertion-cm)
     export Instance=&quot;cm&quot;
     ;;
   Dynamic-Ad-Insertion-engine)
    export restComp=&quot;y&quot;
    for i in ads psn cis; do
     export Instance=&quot;$i&quot;
     cd /opt/build/scripts
     ./tcServerAdmin.sh $RestartTarg $Instance stop 
     ./tcServerAdmin.sh $RestartTarg $Instance start
     sleep 120
     done
     ;;
   dai-cip-feedback)
     export Instance=&quot;dai-cip&quot;
     ;;
   acp)
     export Instance=&quot;acp&quot;
     ;;
   dai-smsi)
     export Instance=&quot;smsi&quot;
     ;;
   ops-dce-scte-cfa-reporting-agent)
     export Instance=&quot;dce-agent-001&quot;
     ;;
   ops-dce-safi-reporting-agent)
     export Instance=&quot;dce-agent-002&quot;
     ;;
   ops-dt)
     export Instance=&quot;ops-dt&quot;
     ;;
   ops-dce-metadata-agent)
     export Instance=&quot;dce-mdata&quot;
     ;;
esac

if [[ ${restComp} = &quot;y&quot; ]]; then
   echo &quot;A&quot;
  else 
   cd /opt/build/scripts
   executeCommandNoFail &quot;./tcServerAdmin.sh $RestartTarg $Instance stop&quot;
   executeCommandNoFail &quot;./tcServerAdmin.sh $RestartTarg $Instance start&quot;
fi
   executeCommandNoFail &quot;./tcServerAdmin.sh $RestartTarg $Instance status&quot; 
done

echo &quot;&lt;b&gt;URL For Restart output: &lt;/b&gt;&lt;a href=&quot;${BUILD_URL}console&quot;&gt;console&lt;/a&gt;&lt;br&gt;&quot; &gt;&gt; /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log
echo &quot;&lt;hr&gt;&quot; &gt;&gt; /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log
echo &quot;&lt;p&gt;&quot; &gt;&gt; /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log
mv /opt/build/scm/scripts/buildServer/log/${DeployTarg}.html /opt/build/scm/scripts/buildServer/log/${DeployTarg}.tmp
cat /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log /opt/build/scm/scripts/buildServer/log/${DeployTarg}.tmp &gt; /opt/build/scm/scripts/buildServer/log/${DeployTarg}.html
rm /opt/build/scm/scripts/buildServer/log/${DeployTarg}.tmp
rm /opt/build/scm/scripts/buildServer/log/${BUILD_TAG}.log</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

cd /opt/build/scripts

export targs=&quot;scrum2&quot;
echo &quot;./envRefresh.sh $targs&quot;
./envRefresh.sh $targs</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>