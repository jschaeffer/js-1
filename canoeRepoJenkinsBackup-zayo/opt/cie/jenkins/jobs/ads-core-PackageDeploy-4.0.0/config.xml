<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.13.3">
      <projectUrl>https://github.com/CanoeVentures/ads-core/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.5.3">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>git@github.com:CanoeVentures/ads-core.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/br_4.0.0</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <browser class="hudson.plugins.git.browser.GitWeb">
      <url>https://github.com/CanoeVentures/ads-core</url>
    </browser>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
    </extensions>
  </scm>
  <canRoam>true</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>JDK1.6.0</jdk>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

######################################
### Commented out until pom processing can be resolved
######################################
cd $WORKSPACE

export VERSION=&quot;4.0.0&quot;
export PROJECT=&quot;ads-core&quot;

#echo &quot;Updating poms with Build Version - ${VERSION}_${BUILD_NUMBER}&quot;
#groovy /opt/build/scripts/update.groovy ${VERSION}_${BUILD_NUMBER}

#echo &quot;Running Maven Versions plugin to update dependency and parent information&quot;
#echo &quot;mvn versions:use-latest-versions -Dincludes=com.canoe*:*:*:*SNAPSHOT -DgenerateBackupPoms=false&quot;
#echo &quot;mvn versions:update-parent -DgenerateBackupPoms=false&quot;

#mvn versions:use-latest-versions -Dincludes=com.canoe*:*:*:*SNAPSHOT -DgenerateBackupPoms=false
#mvn versions:update-parent -DgenerateBackupPoms=false</command>
    </hudson.tasks.Shell>
    <org.jfrog.hudson.maven3.Maven3Builder plugin="artifactory@2.5.1">
      <mavenName>Maven3.2</mavenName>
      <rootPom>pom.xml</rootPom>
      <goals>clean install -U -DskipTests</goals>
      <mavenOpts></mavenOpts>
    </org.jfrog.hudson.maven3.Maven3Builder>
    <hudson.plugins.groovy.Groovy plugin="groovy@1.27">
      <scriptSource class="hudson.plugins.groovy.StringScriptSource">
        <command>def VERSION = &quot;4.0.0&quot;
def PROJECT = &quot;ads-core&quot;
def PROJFILE = &quot;/opt/build/scm/scripts/buildServer/properties/projects/$PROJECT/project.properties&quot;
String changelogtemp = &quot;&quot;&quot;

projectRoot=&quot;/opt/cie/jenkins/jobs/ads-core-PackageDeploy-$VERSION/workspace&quot;
commonTargetRoot=&quot;target&quot;

build {
    build_args=&quot;mvn clean install -DskipTests&quot;
}

build_package {
    artifacts {
        name {
            db=&quot;*.sql&quot;
            lb=&quot;liquibase&quot;
            README=&quot;README&quot;
            patch=&quot;sql_scripts&quot;
        }
        location {
            db=&quot;\$projectRoot/core/model/src/main/resources/generated-sql&quot;
            lb=&quot;\$projectRoot/core/model/src/main/resources/&quot;
            README=&quot;\$projectRoot/core/model&quot;
            patch=&quot;\$projectRoot/core/model/src/main/resources/&quot;
        }
    }
}
&quot;&quot;&quot;
File scriptName = new File(&quot;$PROJFILE&quot;)
        scriptName.write(&quot;${changelogtemp}&quot;)
        println scriptName</command>
      </scriptSource>
      <groovyName>(Default)</groovyName>
      <parameters></parameters>
      <scriptParameters></scriptParameters>
      <properties></properties>
      <javaOpts></javaOpts>
      <classPath></classPath>
    </hudson.plugins.groovy.Groovy>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
export VERSION=&quot;4.0.0&quot;
export PROJECT=&quot;ads-core&quot;
export PROJFILE=&quot;/opt/build/scm/scripts/buildServer/properties/projects/ads-core/project.properties&quot;

cat $PROJFILE

/opt/build/scripts/CreateJenkinsPackage.sh $PROJECT $PROJECT br_$VERSION ${BUILD_NUMBER}
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
# Dependency deployment and capture section
#############################################
#### Commenting out the branch creation until pom processing can be figured out
#############################################

export VERSION=&quot;4.0.0&quot;
export PROJECT=&quot;ads-core&quot;

echo &quot;Capturing Dependency info in pom.xmls and running dependency:tree&quot;
cd ${WORKSPACE}
find . -type f -name &quot;pom.xml&quot; -exec tar -rvf /opt/build/releaseTars/${PROJECT}/${PROJECT}_${VERSION}_${BUILD_NUMBER}_poms.tar &apos;{}&apos; \;

mvn dependency:tree -DoutputFile=dependsTree.txt

find . -type f -name &quot;dependsTree.txt&quot; -exec cat &gt;&gt; /opt/build/releaseTars/${PROJECT}/${PROJECT}_${VERSION}_${BUILD_NUMBER}_dependencies.txt &apos;{}&apos; \;

echo &quot;Creating build branch to store revised pom.xml files&quot;
/opt/build/scripts/createBuildLod.sh ${PROJECT} br_${VERSION} br_${VERSION}_${BUILD_NUMBER}

#cd /opt/checkouts/${PROJECT} || exit 1
#git checkout br_${VERSION}_${BUILD_NUMBER} || exit 1
#tar -xvf /opt/build/releaseTars/${PROJECT}/${PROJECT}_${VERSION}_${BUILD_NUMBER}_poms.tar || exit 1
#echo &quot;Build branch created.  Adding pom files to branch&quot;
#git add . || exit 1
#git commit -m&quot;Checking in .pom file modifications for build ${VERSION}_${BUILD_NUMBER} dependency versions&quot; || exit 1
#git push origin || exit 1


echo &quot;Dependency tree output is here: http://cvbuild.cv.infra/releaseTars/${PROJECT}/${PROJECT}_${VERSION}_${BUILD_NUMBER}_dependencies.txt&quot;
echo &quot;Poms are captured in .tar format here: http://cvbuild.cv.infra/releaseTars/${PROJECT}/${PROJECT}_${VERSION}_${BUILD_NUMBER}_poms.tar&quot;
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
# Single deployment section

export VERSION=&quot;4.0.0_${BUILD_NUMBER}&quot;
export Component=&quot;ads-core&quot;; echo &quot;Component - $Component&quot;
export DB_Rebuild=&quot;Yes&quot;; echo &quot;DB_Rebuild - $DB_Rebuild&quot;
export Version=${VERSION}; echo &quot;Version - $Version&quot;
export Clear_Logs=&quot;Yes&quot;; echo &quot;Clear_Logs - $Clear_Logs&quot;
export DeployTarg=&quot;devint&quot;; echo &quot;DeployTarg - $DeployTarg&quot;
export DeployUser=&quot;Jenkins&quot;; echo &quot;DeployUser = $DeployUser&quot;
export BUILD_TAG

ssh cvbuild.cv.dr &quot;bash -c \&quot;source ~/.bash_profile &amp;&amp; cd /opt/build/scripts &amp;&amp; ./Single_Component_Deploy.sh $Component $DB_Rebuild $Clear_Logs $DeployTarg $BUILD_TAG $DeployUser $JOB_NAME $BUILD_NUMBER $Version\&quot; &quot;</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

echo &quot;4.0.0_${BUILD_NUMBER}&quot; &gt; /var/www/html/devint/ads-core.txt</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.git.GitPublisher plugin="git@2.5.3">
      <configVersion>2</configVersion>
      <pushMerge>false</pushMerge>
      <pushOnlyIfSuccess>false</pushOnlyIfSuccess>
      <forcePush>false</forcePush>
      <tagsToPush>
        <hudson.plugins.git.GitPublisher_-TagToPush>
          <targetRepoName>origin</targetRepoName>
          <tagName>v_4.0.0_${BUILD_NUMBER}</tagName>
          <tagMessage></tagMessage>
          <createTag>true</createTag>
          <updateTag>false</updateTag>
        </hudson.plugins.git.GitPublisher_-TagToPush>
      </tagsToPush>
      <branchesToPush/>
      <notesToPush/>
    </hudson.plugins.git.GitPublisher>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.40.5">
      <recipientList>bob.griese@canoeventures.com,craig.donovan@canoeventures.com,jeff.schaeffer@canoeventures.com</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.StillFailingTrigger>
          <email>
            <recipientList></recipientList>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo></replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.StillFailingTrigger>
        <hudson.plugins.emailext.plugins.trigger.SuccessTrigger>
          <email>
            <recipientList></recipientList>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo></replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.SuccessTrigger>
        <hudson.plugins.emailext.plugins.trigger.FailureTrigger>
          <email>
            <recipientList></recipientList>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo></replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.FailureTrigger>
        <hudson.plugins.emailext.plugins.trigger.FixedTrigger>
          <email>
            <recipientList></recipientList>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo></replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.FixedTrigger>
      </configuredTriggers>
      <contentType>default</contentType>
      <defaultSubject>$DEFAULT_SUBJECT</defaultSubject>
      <defaultContent>${BUILD_URL}

${BUILD_LOG,maxLines=30}
</defaultContent>
      <attachmentsPattern></attachmentsPattern>
      <presendScript></presendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo></replyTo>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
  </publishers>
  <buildWrappers>
    <org.jfrog.hudson.maven3.ArtifactoryMaven3Configurator plugin="artifactory@2.5.1">
      <details>
        <artifactoryName>https://canoe-ventures.artifactoryonline.com/canoe_ventures</artifactoryName>
        <artifactoryUrl>https://canoe-ventures.artifactoryonline.com/canoe_ventures</artifactoryUrl>
        <deployReleaseRepository>
          <keyFromText>libs-releases-local</keyFromText>
          <keyFromSelect>libs-releases-local</keyFromSelect>
          <dynamicMode>false</dynamicMode>
        </deployReleaseRepository>
        <deploySnapshotRepository>
          <keyFromText>libs-snapshots-local</keyFromText>
          <keyFromSelect>libs-snapshots-local</keyFromSelect>
          <dynamicMode>false</dynamicMode>
        </deploySnapshotRepository>
        <stagingPlugin/>
      </details>
      <resolverDetails>
        <artifactoryName>https://canoe-ventures.artifactoryonline.com/canoe_ventures</artifactoryName>
        <artifactoryUrl>https://canoe-ventures.artifactoryonline.com/canoe_ventures</artifactoryUrl>
        <resolveSnapshotRepository>
          <keyFromText></keyFromText>
          <keyFromSelect></keyFromSelect>
          <dynamicMode>false</dynamicMode>
        </resolveSnapshotRepository>
        <resolveReleaseRepository>
          <keyFromText></keyFromText>
          <keyFromSelect></keyFromSelect>
          <dynamicMode>false</dynamicMode>
        </resolveReleaseRepository>
        <stagingPlugin/>
      </resolverDetails>
      <deployerCredentialsConfig>
        <credentials>
          <username></username>
          <password></password>
        </credentials>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
      </deployerCredentialsConfig>
      <resolverCredentialsConfig reference="../deployerCredentialsConfig"/>
      <deployArtifacts>false</deployArtifacts>
      <artifactDeploymentPatterns>
        <includePatterns></includePatterns>
        <excludePatterns></excludePatterns>
      </artifactDeploymentPatterns>
      <includeEnvVars>false</includeEnvVars>
      <deployBuildInfo>false</deployBuildInfo>
      <runChecks>false</runChecks>
      <violationRecipients></violationRecipients>
      <includePublishArtifacts>false</includePublishArtifacts>
      <scopes></scopes>
      <discardOldBuilds>false</discardOldBuilds>
      <discardBuildArtifacts>true</discardBuildArtifacts>
      <matrixParams></matrixParams>
      <enableIssueTrackerIntegration>false</enableIssueTrackerIntegration>
      <filterExcludedArtifactsFromBuild>false</filterExcludedArtifactsFromBuild>
      <enableResolveArtifacts>false</enableResolveArtifacts>
      <envVarsPatterns>
        <includePatterns></includePatterns>
        <excludePatterns>*password*,*secret*</excludePatterns>
      </envVarsPatterns>
      <licenseAutoDiscovery>true</licenseAutoDiscovery>
      <disableLicenseAutoDiscovery>false</disableLicenseAutoDiscovery>
      <aggregateBuildIssues>false</aggregateBuildIssues>
      <aggregationBuildStatus>Released</aggregationBuildStatus>
      <recordAllDependencies>false</recordAllDependencies>
      <blackDuckRunChecks>false</blackDuckRunChecks>
      <blackDuckAppName></blackDuckAppName>
      <blackDuckAppVersion></blackDuckAppVersion>
      <blackDuckReportRecipients></blackDuckReportRecipients>
      <blackDuckScopes></blackDuckScopes>
      <blackDuckIncludePublishedArtifacts>false</blackDuckIncludePublishedArtifacts>
      <autoCreateMissingComponentRequests>true</autoCreateMissingComponentRequests>
      <autoDiscardStaleComponentRequests>true</autoDiscardStaleComponentRequests>
    </org.jfrog.hudson.maven3.ArtifactoryMaven3Configurator>
  </buildWrappers>
</project>