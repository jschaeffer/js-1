projectRoot="/opt/checkouts/alph_codf_generator"
commonTargetRoot="target"
webappDir="webapps"
webappProject="alph_codf_generator"

build {
    build_args="grails clean -non-interactive,grails war -non-interactive -Dgrails.env=prod"
}

jira {
    update_jira="false"
}

database {

    driver=""

    liquibase {
        update_liquibase="false"
        base_dir=""
        change_log_file=""
        command=""
    }

    env {
        dev {
            host=""
            url=""
            username=""
            password=""
        }
        qa {
            host=""
            url=""
            username=""
            password=""
        }
        staging {
            host=""
            url=""
            username=""
            password=""
        }
        prod {
            host=""
            url=""
            username=""
            password=""
        }
    }
}

build_package {
    artifacts {
        name {
            war="alph_codf_generator.war"
            db="*.sql"
            config="*.*"
            deploy="deploy.txt"
        }   
        location {
            war="$projectRoot/$commonTargetRoot/"
            db="$projectRoot/release"
            config="$projectRoot/release"
            deploy="$projectRoot/release"
        }
    }
}

deploy {
    artifacts {
        name {
            alph_codf_generator="alph_codf_generator.war"
        }
        location {
            alph_codf_generator="target"
        }
        deploy_type {
            alph_codf_generator="archive"
        }
        webapp_project {
            alph_codf_generator="alph_codf_generator"
        }
    }
    pre_deploy_cmds {
    }

    post_deploy_cmds {
    }

    local {
        deployUser="pzimmerman"

        environment {
            name="pzimmerman.laptop"
            ip="192.168.211.54"
        }

        tcserver {
            base="/opt/tools/tcserver"
            instance_home="$tcserver.base"
            instance_name="alph_codf_generator"
            admin_script="tcruntime-ctl.sh"
            status_cmd="$tcserver.base/$tcserver.admin_script $tcserver.instance_name status"
            start_cmd="$tcserver.base/$tcserver.admin_script $tcserver.instance_name start"
            stop_cmd="$tcserver.base/$tcserver.admin_script $tcserver.instance_name stop"
        }
    }

    dev {
        deployUser="tcserver"

        environment {
            name="dvetvsmalph01"
            ip="10.13.16.124"
        }

        tcserver {
            base="/opt/tcServer/springsource-tc-server-developer"
            instance_home="/opt/tcserver/instances"
            instance_name="alph_codf_generator"
            admin_script="tcruntime-ctl.sh"
            status_cmd="sudo /sbin/service tcserver status=$tcserver.instance_name"
            start_cmd="sudo /sbin/service tcserver start=$tcserver.instance_name"
            stop_cmd="sudo /sbin/service tcserver stop=$tcserver.instance_name"
        }
    }
}
