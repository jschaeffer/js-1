<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.canoeventures.dai.ads</groupId>
    <artifactId>ads-core</artifactId>
    <version>4.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>ads-core</name>
    <modules>
        <module>core</module>
    </modules>
    <properties>
        <oracle.version>11.2.0.2.0</oracle.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <project.version>4.0.0-SNAPSHOT</project.version>

        <jetty.port>9997</jetty.port>
        <jetty.stopPort>9998</jetty.stopPort>

        <jdbc.host>oraclehost</jdbc.host>
	<jdbc.url>jdbc:oracle:thin:@oraclehost:1521:devvm</jdbc.url>
        <jdbc.adminuser>system</jdbc.adminuser>
        <jdbc.adminpass>canoe</jdbc.adminpass>
        <jdbc.drop>false</jdbc.drop>
        <jdbc.username>ads</jdbc.username>
        <jdbc.password>blah</jdbc.password>
        <jdbc.schema>ads</jdbc.schema>
        <migrate.prompt.remote>true</migrate.prompt.remote>
    </properties>
    <profiles>
        <profile>
            <id>drop-db</id>
            <activation>
                <property>
                    <name>jdbc.drop</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>drop-db</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <sqlCommand>
                                        DROP USER ${jdbc.username} CASCADE
                                    </sqlCommand>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>db-persist</id>
            <properties>
                <jdbc.schema>dai</jdbc.schema>
            </properties>
        </profile>
        <profile>
            <id>db</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>create-db-and-user</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <delimiter>;</delimiter>
                                    <sqlCommand>
                                        CREATE USER ${jdbc.username} IDENTIFIED BY ${jdbc.password} DEFAULT TABLESPACE
                                        users TEMPORARY TABLESPACE temp ;
                                         GRANT connect, resource, create view, create trigger, create any trigger, create materialized view, create any materialized view, unlimited tablespace to ${jdbc.username};
                                         GRANT CREATE SYNONYM TO ${jdbc.username};
                                         GRANT SELECT,UPDATE,DELETE,INSERT, REFERENCES ON ${CAAS_SCHEMA_NAME}.MEDIA_ASSET TO ${jdbc.username};
                                         GRANT SELECT,UPDATE,DELETE,INSERT, REFERENCES ON ${CAAS_SCHEMA_NAME}.MEDIA_ASSET_METADATA_VALUE TO ${jdbc.username};
                                    </sqlCommand>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.liquibase</groupId>
                    <artifactId>liquibase-maven-plugin</artifactId>
                    <version>2.0.1</version>
                    <configuration>
                        <changeLogFile>src/main/resources/liquibase/master-changelog.xml</changeLogFile>
                        <driver>oracle.jdbc.driver.OracleDriver</driver>
                        <url>${jdbc.url}</url>
                        <username>${jdbc.username}</username>
                        <password>${jdbc.password}</password>
                        <verbose>true</verbose>
                        <dropFirst>false</dropFirst>
                        <promptOnNonLocalDatabase>${migrate.prompt.remote}</promptOnNonLocalDatabase>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>sql-maven-plugin</artifactId>
                    <version>1.4</version>
                    <dependencies>
                        <dependency>
                            <groupId>com.oracle</groupId>
                            <artifactId>ojdbc6</artifactId>
                            <version>${oracle.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <url>${jdbc.url}</url>
                        <username>${jdbc.adminuser}</username>
                        <password>${jdbc.adminpass}</password>
                        <driver>oracle.jdbc.driver.OracleDriver</driver>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>1.6</source>
                        <target>1.6</target>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.7.2</version>
                    <configuration>
                        <excludedGroups>integration</excludedGroups>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.6</version>
                    <configuration>
                        <systemPropertyVariables>
                            <systemProperty>
                                <webapp.port>${jetty.port}</webapp.port>
                            </systemProperty>
                        </systemPropertyVariables>
                        <argLine>-Dwebapp.port=${jetty.port}</argLine>
                        <includes>
                            <include>**/*.java</include>
                        </includes>
                        <groups>integration</groups>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <configuration>
                        <archive>
                            <index>true</index>
                            <manifest>
                                <addClasspath>true</addClasspath>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            </manifest>

                            <manifestEntries>
                                <Built-By>${user.name}</Built-By>
                                <Build-Jdk>${java.vendor} ${java.version}</Build-Jdk>
                                <Build-Date>${dia.build.timestamp}</Build-Date>
                                <Build-Commit>${dia.build.commit}</Build-Commit>
                                <Build-Host>${dia.build.hostname}</Build-Host>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                  <exclude>**/*.bin</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                  <include>**/*.bin</include>
                </includes>
            </resource>
        </resources>
    </build>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.canoe.common-pom</groupId>
                <artifactId>commons</artifactId>
                <type>pom</type>
                <version>1.0.0-SNAPSHOT</version>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.canoe.common-pom</groupId>
                <artifactId>springpom305</artifactId>
                <type>pom</type>
                <version>1.0.0-SNAPSHOT</version>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.canoe.common-pom</groupId>
                <artifactId>hibernate368Final</artifactId>
                <type>pom</type>
                <version>1.0.0-SNAPSHOT</version>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.canoe.common-pom</groupId>
                <artifactId>jdbc</artifactId>
                <type>pom</type>
                <version>1.0.0-SNAPSHOT</version>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.canoe.common-pom</groupId>
                <artifactId>logs</artifactId>
                <type>pom</type>
                <version>1.0.0-SNAPSHOT</version>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.canoe.common-pom</groupId>
                <artifactId>tests</artifactId>
                <type>pom</type>
                <version>1.0.0-SNAPSHOT</version>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.canoe.common-pom</groupId>
                <artifactId>cxf</artifactId>
                <type>pom</type>
                <version>1.0.0-SNAPSHOT</version>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.canoe.common-pom</groupId>
                <artifactId>misc</artifactId>
                <type>pom</type>
                <version>1.0.0-SNAPSHOT</version>
                <scope>import</scope>
            </dependency>


            <dependency>
                <groupId>com.canoeventures.crypt</groupId>
                <artifactId>crypt-decrypter</artifactId>
                <version>1.0.0-SNAPSHOT</version>
                <type>jar</type>
            </dependency>
        </dependencies>
    </dependencyManagement>



    <!-- dependencies inherited by sub modules -->
    <dependencies>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
        </dependency>
        <dependency>
            <groupId>com.mchange</groupId>
            <artifactId>c3p0</artifactId>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>jboss repository</id>
            <name>Jboss Nexus</name>
            <url>https://repository.jboss.org/nexus/content/groups/public</url>
        </repository>
        <repository>
            <id>com.springsource.repository.bundles.release</id>
            <name>SpringSource Enterprise Bundle Repository - SpringSource Bundle Releases</name>
            <url>http://repository.springsource.com/maven/bundles/release</url>
        </repository>
        <repository>
            <id>com.springsource.repository.bundles.external</id>
            <name>SpringSource Enterprise Bundle Repository - External Bundle Releases</name>
            <url>http://repository.springsource.com/maven/bundles/external</url>
        </repository>
        <repository>
            <id>maven2-repository.dev.java.net</id>
            <name>Java.net Repository for Maven</name>
            <url>http://download.java.net/maven/2/</url>
            <layout>default</layout>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>codehaus snapshot repository</id>
            <url>http://snapshots.repository.codehaus.org/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </pluginRepository>
    </pluginRepositories>
</project>
